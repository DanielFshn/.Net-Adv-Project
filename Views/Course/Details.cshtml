@model Course_Store.Models.Requests.CourseAddRequest

@{
    ViewBag.Title = "Details";
}
<style>
    body {
        font-family: 'open sans';
        overflow-x: hidden;
        background-color: #e2e2e2;
    }

    img {
        max-width: 100%;
    }

    .preview {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -webkit-flex-direction: column;
        -ms-flex-direction: column;
        flex-direction: column;
    }

    media screen and (max-width: 996px) {
        .preview

    {
        margin-bottom: 20px;
    }

    }

    .preview-pic {
        -webkit-box-flex: 1;
        -webkit-flex-grow: 1;
        -ms-flex-positive: 1;
        flex-grow: 1;
    }

    .preview-thumbnail.nav-tabs {
        border: none;
        margin-top: 15px;
    }

        .preview-thumbnail.nav-tabs li {
            width: 18%;
            margin-right: 2.5%;
        }

            .preview-thumbnail.nav-tabs li img {
                max-width: 100%;
                display: block;
            }

            .preview-thumbnail.nav-tabs li a {
                padding: 0;
                margin: 0;
            }

            .preview-thumbnail.nav-tabs li:last-of-type {
                margin-right: 0;
            }

    .tab-content {
        overflow: hidden;
    }

        .tab-content img {
            width: 100%;
            -webkit-animation-name: opacity;
            animation-name: opacity;
            -webkit-animation-duration: .3s;
            animation-duration: .3s;
        }

    .card {
        margin-top: 50px;
        background: #eee;
        padding: 3em;
        line-height: 1.5em;
    }

    media screen and (min-width: 997px) {
        .wrapper

    {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
    }

    }

    .details {
        display: -webkit-box;
        display: -webkit-flex;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -webkit-flex-direction: column;
        -ms-flex-direction: column;
        flex-direction: column;
    }

    .colors {
        -webkit-box-flex: 1;
        -webkit-flex-grow: 1;
        -ms-flex-positive: 1;
        flex-grow: 1;
    }

    .product-title, .price, .sizes, .colors {
        text-transform: UPPERCASE;
        font-weight: bold;
    }

        .checked, .price span {
            color: #ff9f1a;
        }

    .product-title, .rating, .product-description, .price, .vote, .sizes {
        margin-bottom: 15px;
    }

    .product-title {
        margin-top: 0;
    }

    .size {
        margin-right: 10px;
    }

        .size:first-of-type {
            margin-left: 40px;
        }

    .color {
        display: inline-block;
        vertical-align: middle;
        margin-right: 10px;
        height: 2em;
        width: 2em;
        border-radius: 2px;
    }

        .color:first-of-type {
            margin-left: 20px;
        }

    .add-to-cart, .like {
        background: #ff9f1a;
        padding: 1.2em 1.5em;
        border: none;
        text-transform: UPPERCASE;
        font-weight: bold;
        color: #fff;
        -webkit-transition: background .3s ease;
        transition: background .3s ease;
    }

        .add-to-cart:hover, .like:hover {
            background: #b36800;
            color: #fff;
        }

    .not-available {
        text-align: center;
        line-height: 2em;
    }

        .not-available:before {
            font-family: fontawesome;
            content: "\f00d";
            color: #fff;
        }

    .orange {
        background: #ff9f1a;
    }

    .green {
        background: #85ad00;
    }

    .blue {
        background: #0076ad;
    }

    .tooltip-inner {
        padding: 1.3em;
    }

    -webkit-keyframes opacity {
        0%

    {
        opacity: 0;
        -webkit-transform: scale(3);
        transform: scale(3);
    }

    100% {
        opacity: 1;
        -webkit-transform: scale(1);
        transform: scale(1);
    }

    }

    keyframes opacity {
        0%

    {
        opacity: 0;
        -webkit-transform: scale(3);
        transform: scale(3);
    }

    100% {
        opacity: 1;
        -webkit-transform: scale(1);
        transform: scale(1);
    }
    }
</style>

<h2>Details</h2>
<br />
<br />
<div class="container">
    <div class="card">
        <div class="container-fliud">
            <div class="wrapper row">
                <div class="preview col-md-6">

                    <div class="preview-pic tab-content">
                        <div class="tab-pane active" id="pic-1"><img src="@Url.Content(Model.Image)" /></div>

                    </div>


                </div>
                <div class="details col-md-6">
                    <h3 class="product-title">@Html.DisplayFor(model => model.Title)</h3>
                    <div class="rating">
                        <div class="stars">
                            <span class="fa fa-star checked"></span>
                            <span class="fa fa-star checked"></span>
                            <span class="fa fa-star checked"></span>
                            <span class="fa fa-star"></span>
                            <span class="fa fa-star"></span>
                        </div>
                        <span class="review-no">41 reviews</span>
                    </div>
                    <p class="product-description"><b>Description: </b>@Html.DisplayFor(x => x.Description)</p>
                    <p class="product-description"><b>Objectives: </b>@Html.DisplayFor(x => x.Objectives)</p>
                    <h4 class="price">current price: <span>$@Html.DisplayFor(x => x.Price)</span></h4>
                    <p class="vote"><strong>91%</strong> of buyers enjoyed this product! <strong>(87 votes)</strong></p>
                    @if (!User.IsInRole("Trainer"))
                    {
                        <div class="action">
                            <div style="width: 500px !important" onclick="window.event.cancelBubble='true'">
                                @using (Ajax.BeginForm("AddToCart", "Order", routeValues: null, htmlAttributes: new { @class = "form-inline" }, ajaxOptions: new AjaxOptions { HttpMethod = "POST", UpdateTargetId = string.Join("btnAdd", Model.Id), InsertionMode = InsertionMode.Replace }))
                                {
                                    <div class="input-group mb-3 w-100">
                                        @Html.AntiForgeryToken()
                                        <input type="hidden" value="@Model.Id" name="id" />
                                        <div class="input-group-append w-100">
                                            <button id="@string.Join("btnAdd", Model.Id)" class="btn btn-outline-primary" type="submit">
                                                Add To Cart
                                            </button>
                                        </div>
                                    </div>
                                }
                            </div>

                            @*<button class="add-to-cart btn btn-default" type="button">add to cart</button>*@
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@*<div>
        <h4>Course</h4>
        <hr />
        <dl class="dl-horizontal">
            <dt>
                @Html.DisplayNameFor(model => model.Title)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Title)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Category)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Category.CategotyType)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Description)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Description)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Price)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Price)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Image)
            </dt>

            <dd>
                <img src="@Url.Content(Model.Image)"
            </dd>
            <dt>
                @Html.DisplayNameFor(model => model.IsPublish)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.IsPublish)
            </dd>

            <dt>
                @Html.DisplayNameFor(model => model.Objectives)
            </dt>

            <dd>
                @Html.DisplayFor(model => model.Objectives)
            </dd>

        </dl>
    </div>*@
<p>
    @if (User.IsInRole("Admin"))
    {
        @Html.ActionLink("Edit", "Edit", new { id = Model.Id })
    }
    @Html.ActionLink("Back to List", "Index", null, new { @class = "text-dark" })
</p>
